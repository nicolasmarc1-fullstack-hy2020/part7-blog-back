{"version":3,"sources":["components/NewBlogForm.jsx","components/Toggleable.jsx","components/Blog.jsx","components/BlogList.jsx","components/LoginForm.jsx","services/blogs.js","components/Notification.jsx","services/login.js","App.jsx","index.jsx"],"names":["NewBlogForm","addBlog","useState","author","setAuthor","title","setTitle","url","setUrl","onSubmit","event","preventDefault","required","type","name","data-testid","value","onChange","target","Toggleable","React","forwardRef","props","ref","visible","setVisible","showWhenNotVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","displayName","BlogCore","blog","addOneLike","isBlogAdder","deleteOwnBlog","toggleBlogListFocus","isFocused","detailsStyle","toggleLabel","className","paddingTop","paddingLeft","border","borderWidth","marginBottom","likes","user","Blog","undefined","blogCore","focusedBlog","setFocusedBlog","key","id","blogToFocus","BlogFallbackToggle","BlogList","blogs","map","LoginForm","userLogin","username","setUsername","password","setPassword","defaultProps","token","Notification","notification","message","setToken","newToken","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","put","request","delete","login","credentials","App","setBlogs","setUser","setNotification","newBlogFormRef","createRef","useEffect","blogService","then","blogsToLoad","loggedUserJSON","window","localStorage","getItem","userLogged","JSON","parse","blogsList","handleLogin","loginService","userToLog","setItem","stringify","setTimeout","blogToCreate","current","createdBlog","oldBlogs","blogToUpdate","updatedBlog","blogToRemove","confirm","filter","e","removeItem","sort","b","localeCompare","sensitivity","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dbfa6fe.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst NewBlogForm = ({ addBlog }) => {\r\n  const [author, setAuthor] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const submitBlog = (event) => {\r\n    event.preventDefault()\r\n    addBlog({\r\n      author,\r\n      title,\r\n      url\r\n    })\r\n    setAuthor('')\r\n    setTitle('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={submitBlog}>\r\n        <div>\r\n          title\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"title\"\r\n            data-testid='title-input'\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            type=\"text\"\r\n            name=\"author\"\r\n            data-testid='author-input'\r\n            value={author}\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"url\"\r\n            data-testid='url-input'\r\n            value={url}\r\n            onChange={({ target }) => setUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" data-testid='submit-blog-button'>Create</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default NewBlogForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Toggleable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showWhenNotVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    toggleVisibility\r\n  }))\r\n\r\n  return (\r\n    <div>\r\n      <div style={showWhenNotVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nToggleable.displayName = 'Toggleable'\r\nToggleable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Toggleable\r\n","import React, { useState } from 'react'\r\n\r\nconst BlogCore = ({\r\n  blog,\r\n  addOneLike,\r\n  isBlogAdder,\r\n  deleteOwnBlog,\r\n  toggleBlogListFocus,\r\n  isFocused,\r\n}) => {\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5,\r\n  }\r\n  const detailsStyle = { display: isFocused ? '' : 'none' }\r\n  const toggleLabel = isFocused ? 'hide' : 'view'\r\n\r\n  const toggleDetails = () =>\r\n    isFocused ? toggleBlogListFocus(null) : toggleBlogListFocus(blog)\r\n\r\n  return (\r\n    <div className=\"blog\" style={blogStyle}>\r\n      <span className=\"blogTitle\">{blog.title} </span>\r\n      <span className=\"blogAuthor\">{blog.author} </span>\r\n      <button onClick={() => toggleDetails()}>{toggleLabel}</button>\r\n      <div className=\"blogDetails\" style={detailsStyle}>\r\n        <div className=\"blogURL\">{blog.url}</div>\r\n        <div className=\"blogLikes\">\r\n          {blog.likes}\r\n          <button onClick={(event) => addOneLike(event, blog)}>like</button>\r\n        </div>\r\n        <div>{blog.user.name}</div>\r\n        {isBlogAdder(blog) && (\r\n          <div>\r\n            <button data-testid=\"delete button\" onClick={(event) => deleteOwnBlog(event, blog)}>\r\n              remove\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n//  if doesn't want a Blog in a list or if doesn't want to collapse other Blogs when click on a new one + testing\r\nconst BlogFallbackToggle = ({\r\n  blog,\r\n  addOneLike,\r\n  isBlogAdder,\r\n  deleteOwnBlog,\r\n}) => {\r\n  const [focusedBlog, setFocusedBlog] = useState(null)\r\n  const isFocused = (blogCore) => focusedBlog ? blogCore.id === focusedBlog.id : false\r\n\r\n  return (\r\n    <BlogCore\r\n      key={blog.id}\r\n      blog={blog}\r\n      deleteOwnBlog={deleteOwnBlog}\r\n      addOneLike={addOneLike}\r\n      isBlogAdder={isBlogAdder}\r\n      toggleBlogListFocus={(blogToFocus) => setFocusedBlog(blogToFocus)}\r\n      isFocused={isFocused(blog)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function Blog(props) {\r\n  if(props.toggleBlogListFocus === undefined || props.isFocused === undefined){\r\n    if(props.blog === undefined){\r\n      return ''\r\n    }\r\n    return BlogFallbackToggle(props)\r\n  }\r\n\r\n  return BlogCore(props)\r\n}\r\n","import React, { useState } from 'react'\r\nimport Blog from './Blog'\r\n\r\nconst BlogList = ({ blogs, deleteOwnBlog, addOneLike, isBlogAdder }) => {\r\n\r\n  const [focusedBlog, setFocusedBlog] = useState(null)\r\n  const isFocused = (blog) => focusedBlog ? blog.id === focusedBlog.id : false\r\n\r\n  return (\r\n    <div>\r\n      {blogs\r\n        .map((blog) => (\r\n          <Blog\r\n            key={blog.id}\r\n            blog={blog}\r\n            deleteOwnBlog={deleteOwnBlog}\r\n            addOneLike={addOneLike}\r\n            isBlogAdder={isBlogAdder}\r\n            toggleBlogListFocus={(blogToFocus) => setFocusedBlog(blogToFocus)}\r\n            isFocused={isFocused(blog)}\r\n          />\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\nexport default BlogList","import React, { useState } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst LoginForm = ({ userLogin, children}) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleSumbit = (event) => {\r\n    event.preventDefault()\r\n    userLogin({\r\n      username,\r\n      password,\r\n    })\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>login to the application</h2>\r\n      {children}\r\n      <form onSubmit={handleSumbit}>\r\n        <div>\r\n          username\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            data-testid=\"username-input\"\r\n            value={username}\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            data-testid=\"password-input\"\r\n            value={password}\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" data-testid=\"login-button\">Sign-in</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  children: PropTypes.node,\r\n  userLogin: PropTypes.func.isRequired,\r\n}\r\n\r\nLoginForm.defaultProps = {\r\n  children: \"\"\r\n}\r\n\r\nexport default LoginForm\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const request = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.data\r\n}\r\n\r\nexport default {\r\n  setToken,\r\n  getAll,\r\n  create,\r\n  update,\r\n  delete: remove,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.type}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nNotification.propTypes = {\r\n  notification: PropTypes.shape({\r\n    message: PropTypes.string.isRequired,\r\n    type: PropTypes.string,\r\n  }).isRequired,\r\n}\r\n\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\n\r\nconst baseUrl = 'api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { login }\r\n","import React, { useState, useEffect } from 'react'\r\nimport NewBlogForm from './components/NewBlogForm'\r\nimport Toggleable from './components/Toggleable'\r\nimport BlogList from './components/BlogList'\r\nimport LoginForm from './components/LoginForm'\r\nimport Notification from './components/Notification'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [notification, setNotification] = useState(null)\r\n\r\n  const newBlogFormRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      blogService.getAll().then((blogsToLoad) => setBlogs(blogsToLoad))\r\n    }\r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const userLogged = JSON.parse(loggedUserJSON)\r\n      setUser(userLogged)\r\n      blogService.setToken(userLogged.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (credentials) => {\r\n    try {\r\n      const userToLog = await loginService.login(credentials)\r\n      window.localStorage.setItem(\r\n        'loggedBlogAppUser',\r\n        JSON.stringify(userToLog)\r\n      )\r\n      blogService.setToken(userToLog.token)\r\n      setUser(userToLog)\r\n    } catch (e) {\r\n      setNotification({\r\n        // message: e.response.data.error,\r\n        message: 'wrong username or password',\r\n        type: 'notification error',\r\n      })\r\n      setTimeout(() => setNotification(null), 5000)\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    setUser(null)\r\n    blogService.setToken(null)\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n  }\r\n\r\n  const addBlog = async (blogToCreate) => {\r\n    try {\r\n      newBlogFormRef.current.toggleVisibility()\r\n      const createdBlog = await blogService.create(blogToCreate)\r\n      setBlogs((oldBlogs) => [...oldBlogs, createdBlog])\r\n      setNotification({\r\n        message: `a new blog ${createdBlog.title} by ${createdBlog.author} added `,\r\n        type: 'notification confirmation',\r\n      })\r\n      setTimeout(() => setNotification(null), 5000)\r\n    } catch (e) {\r\n      // setNotification({\r\n      // message: e.response.data.error,\r\n      //   type: \"notification error\"\r\n      // })\r\n      // setTimeout(()=>setNotification(null) , 5000)\r\n    }\r\n  }\r\n\r\n  const addOneLike = async (event, blogToUpdate) => {\r\n    event.preventDefault()\r\n    try {\r\n      const updatedBlog = await blogService.update(blogToUpdate.id, {\r\n        ...blogToUpdate,\r\n        likes: blogToUpdate.likes + 1,\r\n        user: blogToUpdate.user.id,\r\n      })\r\n      setBlogs(\r\n        blogs.map((blog) => (blog.id === blogToUpdate.id ? updatedBlog : blog))\r\n      )\r\n      // setNotification({\r\n      //   message: `a new blog ${createdBlog.title} by ${createdBlog.author} added `,\r\n      //   type: 'notification confirmation',\r\n      // })\r\n      // setTimeout(() => setNotification(null), 5000)\r\n    } catch (e) {\r\n      // setNotification({\r\n      // message: e.response.data.error,\r\n      //   type: \"notification error\"\r\n      // })\r\n      // setTimeout(()=>setNotification(null) , 5000)\r\n    }\r\n  }\r\n\r\n  const deleteOwnBlog = async (event, blogToRemove) => {\r\n    event.preventDefault()\r\n    const confirmation = window.confirm(\r\n      `Remove blog ${blogToRemove.title} by ${blogToRemove.author} ? `\r\n    )\r\n    if (confirmation) {\r\n      try {\r\n        blogService.delete(blogToRemove.id)\r\n        // lastBlogFocusedRef.current = null\r\n        setBlogs(blogs.filter((blog) => blog.id !== blogToRemove.id))\r\n      } catch (e) {\r\n        // setNotification({\r\n        // message: e.response.data.error,\r\n        //   type: \"notification error\"\r\n        // })\r\n        // setTimeout(()=>setNotification(null) , 5000)\r\n      }\r\n    }\r\n  }\r\n\r\n  const sortBlogs = (blogsList) => {\r\n    // works but for elements with equal likes, get a different order each time\r\n    //  return blogsList.sort((a, b) => a.likes - b.likes).reverse()\r\n    // for elements with equal likes, order on titles to be consistent: \"en\" /undefined lang\r\n    return blogsList.sort((a, b) =>\r\n      a.likes === b.likes\r\n        ? a.title.localeCompare(b.title, undefined, { sensitivity: 'base' })\r\n        : b.likes - a.likes\r\n    )\r\n  }\r\n\r\n  const isBlogAdder = (blog) => blog.user.username === user.username\r\n\r\n  if (!user) {\r\n    return (\r\n      <div>\r\n        <LoginForm userLogin={handleLogin}>\r\n          {notification && <Notification notification={notification} />}\r\n        </LoginForm>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      {notification && <Notification notification={notification} />}\r\n      <p>\r\n        {user.name} logged in\r\n        <button type=\"submit\" onClick={handleLogout}>\r\n          log-out\r\n        </button>\r\n      </p>\r\n      <Toggleable buttonLabel=\"create new blog\" ref={newBlogFormRef}>\r\n        <NewBlogForm addBlog={addBlog} />\r\n      </Toggleable>\r\n      <BlogList\r\n        blogs={sortBlogs(blogs)}\r\n        deleteOwnBlog={deleteOwnBlog}\r\n        addOneLike={addOneLike}\r\n        isBlogAdder={isBlogAdder}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}